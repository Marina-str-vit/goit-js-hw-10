{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import Flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst objectEl = {\n  timer: document.querySelector('.timer'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n  btnStart: document.querySelector('[data-start]'),\n  inputTimer: document.querySelector('#datetime-picker'),\n};\n\nobjectEl.btnStart.disabled = true;\nobjectEl.btnStart.classList.add('timer-button__disabled');\nobjectEl.inputTimer.classList.add('timer-input__disabled');\n\nlet userSelectedDate = null;\n\nconst options = new Flatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] > new Date()) {\n      userSelectedDate = selectedDates[0];\n      objectEl.btnStart.disabled = false;\n      objectEl.btnStart.classList.add('timer-button__normal');\n      objectEl.inputTimer.classList.add('timer-input__normal');\n    } else {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please, choose a date in the future',\n        position: 'topRight',\n      });\n      objectEl.btnStart.classList.add('timer-button__disabled');\n      objectEl.inputTimer.classList.add('timer-input__disabled');\n    }\n  },\n});\nconsole.log(options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nobjectEl.btnStart.addEventListener('click', () => {\n  if (userSelectedDate) {\n    const nowDate = new Date();\n    \n    const diff = userSelectedDate - nowDate; \n\n    objectEl.btnStart.disabled = true;\n    objectEl.btnStart.classList.remove('timer-button__normal');\n    objectEl.inputTimer.classList.remove('timer-input__normal');\n    objectEl.btnStart.classList.add('timer-button__disabled');\n    objectEl.inputTimer.classList.add('timer-input__disabled');\n    objectEl.inputTimer.disabled = true;\n\n    const timerInterval = setInterval(() => {\n      const remainingTime = diff - (new Date() - nowDate);\n      \n      const timeParts = convertMs(remainingTime);      \n\n      const formattedTimeParts = Object.fromEntries(\n        Object.entries(timeParts).map(([key, value]) => [\n          key,\n          addLeadingZero(value),\n        ])\n      );\n\n      objectEl.days.textContent = formattedTimeParts.days;\n      objectEl.hours.textContent = formattedTimeParts.hours;\n      objectEl.minutes.textContent = formattedTimeParts.minutes;\n      objectEl.seconds.textContent = formattedTimeParts.seconds;\n\n      if (remainingTime <= 0) {\n        objectEl.days.textContent = addLeadingZero(0);\n        objectEl.hours.textContent = addLeadingZero(0);\n        objectEl.minutes.textContent = addLeadingZero(0);\n        objectEl.seconds.textContent = addLeadingZero(0);\n        clearInterval(timerInterval);\n        objectEl.btnStart.disabled = false;\n        objectEl.inputTimer.disabled = false;\n      }\n    }, 1000);\n  } else {\n    iziToast.error({\n      title: 'Error',\n      message: 'Date is not selected!',\n      position: 'topRight',\n    });\n  }\n});\n"],"names":["objectEl","userSelectedDate","options","Flatpickr","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","nowDate","diff","timerInterval","remainingTime","timeParts","formattedTimeParts","key"],"mappings":"+IAKA,MAAMA,EAAW,CACf,MAAO,SAAS,cAAc,QAAQ,EACtC,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,EAChD,SAAU,SAAS,cAAc,cAAc,EAC/C,WAAY,SAAS,cAAc,kBAAkB,CACvD,EAEAA,EAAS,SAAS,SAAW,GAC7BA,EAAS,SAAS,UAAU,IAAI,wBAAwB,EACxDA,EAAS,WAAW,UAAU,IAAI,uBAAuB,EAEzD,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,IAAIC,EAAU,mBAAoB,CAChD,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,MACzBH,EAAmBG,EAAc,CAAC,EAClCJ,EAAS,SAAS,SAAW,GAC7BA,EAAS,SAAS,UAAU,IAAI,sBAAsB,EACtDA,EAAS,WAAW,UAAU,IAAI,qBAAqB,IAEvDK,EAAS,MAAM,CACb,MAAO,QACP,QAAS,sCACT,SAAU,UAClB,CAAO,EACDL,EAAS,SAAS,UAAU,IAAI,wBAAwB,EACxDA,EAAS,WAAW,UAAU,IAAI,uBAAuB,EAE5D,CACH,CAAC,EACD,QAAQ,IAAIE,CAAO,EAEnB,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEAb,EAAS,SAAS,iBAAiB,QAAS,IAAM,CAChD,GAAIC,EAAkB,CACpB,MAAMa,EAAU,IAAI,KAEdC,EAAOd,EAAmBa,EAEhCd,EAAS,SAAS,SAAW,GAC7BA,EAAS,SAAS,UAAU,OAAO,sBAAsB,EACzDA,EAAS,WAAW,UAAU,OAAO,qBAAqB,EAC1DA,EAAS,SAAS,UAAU,IAAI,wBAAwB,EACxDA,EAAS,WAAW,UAAU,IAAI,uBAAuB,EACzDA,EAAS,WAAW,SAAW,GAE/B,MAAMgB,EAAgB,YAAY,IAAM,CACtC,MAAMC,EAAgBF,GAAQ,IAAI,KAASD,GAErCI,EAAYZ,EAAUW,CAAa,EAEnCE,EAAqB,OAAO,YAChC,OAAO,QAAQD,CAAS,EAAE,IAAI,CAAC,CAACE,EAAKP,CAAK,IAAM,CAC9CO,EACAR,EAAeC,CAAK,CAC9B,CAAS,CACT,EAEMb,EAAS,KAAK,YAAcmB,EAAmB,KAC/CnB,EAAS,MAAM,YAAcmB,EAAmB,MAChDnB,EAAS,QAAQ,YAAcmB,EAAmB,QAClDnB,EAAS,QAAQ,YAAcmB,EAAmB,QAE9CF,GAAiB,IACnBjB,EAAS,KAAK,YAAcY,EAAe,CAAC,EAC5CZ,EAAS,MAAM,YAAcY,EAAe,CAAC,EAC7CZ,EAAS,QAAQ,YAAcY,EAAe,CAAC,EAC/CZ,EAAS,QAAQ,YAAcY,EAAe,CAAC,EAC/C,cAAcI,CAAa,EAC3BhB,EAAS,SAAS,SAAW,GAC7BA,EAAS,WAAW,SAAW,GAElC,EAAE,GAAI,CACX,MACIK,EAAS,MAAM,CACb,MAAO,QACP,QAAS,wBACT,SAAU,UAChB,CAAK,CAEL,CAAC"}